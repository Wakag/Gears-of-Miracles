import library.*;

COMPILER EBNF $CN
/* Parse a set of EBNF productions
   P.D. Terry, modified by KL Bradshaw, 2024 */

/* Rebecca HUfkie - g22h2807
   Amogelang Mphela - g22a7399
   Wakanaka Gurure - g22g8069
   Derrick Asiedu Aboagye - g22a */ 

  public static OutFile output;
  static int count = 0;
  static boolean declared = false;

CHARACTERS
  letter   = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz" .
  lowline  = "_" .
  control  = CHR(0) .. CHR(31) .
  digit    = "0123456789" .
  noquote1 = ANY - "'" - control .
  noquote2 = ANY - '"' - control .

TOKENS
  nonterminal = letter { letter | lowline | digit } .
  terminal    = "'" noquote1 { noquote1 } "'" | '"' noquote2 { noquote2 } '"' .

COMMENTS FROM "(*" TO "*)"  NESTED

IGNORE control

PRODUCTIONS
   EBNF                              (. Table.clearTable(); .)
   =
     { Production                        
     }                               (. Table.printTable(); .)
     EOF.                            

   Production
   =
     SYNC nonterminal            (. declared = true; Table.addRef(token.val, declared, token.line); .)    
     WEAK "="
     Expression
     SYNC "." .

   Expression
   =
   Term
   { WEAK "|" Term
   } .

   Term
   =
   [ Factor
     { Factor
     }
   ] .

   Factor   
   =
       nonterminal            (.declared = false; Table.addRef(token.val, declared, token.line); .)
     | terminal              
     | "[" Expression "]"
     | "(" Expression ")"
     | "{" Expression "}" .

END EBNF.
